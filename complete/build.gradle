import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE')
// tag::build[]
        classpath('com.bmuschko:gradle-docker-plugin:3.0.11')
// end::build[]
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
// tag::plugin[]
apply plugin: 'com.bmuschko.docker-remote-api'
// end::plugin[]

// This is used as the docker image prefix (org)
group = 'springio'

jar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

// tag::task[]
final dockerBuildDir = "${project.buildDir.absolutePath}/docker"

task copyDockerResources(dependsOn: bootRepackage) << {

    copy {
        from './Dockerfile'
        into dockerBuildDir
    }

    copy {
        from jar
        into "$dockerBuildDir/target"
    }
}

task buildImage(type: DockerBuildImage, dependsOn: copyDockerResources) {
    inputDir = project.file(dockerBuildDir)
    tag = "${project.group}/${jar.baseName}"
}

task pushImage(type: DockerPushImage, dependsOn: buildImage) {
    conventionMapping.imageName = { buildImage.getTag() }
}
// end::task[]

repositories {
	mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}
